version: "3.9"

services:
###################################
#  set up database container
###################################
  postgres:
      image: postgres:14
      container_name: postgres
      env_file: .env
      volumes:
        - .:/docker-entrypoint-initdb.d
      ports:
        - 5432:5432
      expose:
        - 5432
      networks:
      - microservices


###################################
#  set up backend container
###################################  
  auth:
    build: ./backend/auth
    container_name: auth
    restart: always
    env_file: .env
    ports:
      - 8000:8000
    expose:
      - 8000
    depends_on:
      - postgres
    networks:
      - microservices

  mailer:
    build: ./backend/mailer
    container_name: mailer
    restart: always
    env_file: .env
    ports:
      - 8001:8000
    expose:
      - 8001
    networks:
      - microservices

  resource:
    build: ./backend/resource
    container_name: resource
    restart: always
    env_file: .env
    ports:
      - 8002:8000
    expose:
      - 8002
    networks:
      - microservices

  upload_files:
    build: ./backend/upload_files
    container_name: upload_files
    restart: always
    env_file: .env
    ports:
      - 8003:8000
    expose:
      - 8003
    networks:
      - microservices

  fake_api:
    build: ./backend/fake_api
    container_name: fake_api
    restart: always
    env_file: .env
    ports:
      - 8004:8000
    expose:
      - 8004
    networks:
      - microservices

  ai:
    build: ./backend/ai
    container_name: ai
    restart: always
    env_file: .env
    ports:
      - 8005:8000
    expose:
      - 8005
    networks:
      - microservices

  ng:
    build: ./ng
    container_name: ng
    restart: always
    depends_on:
      - ai
      - auth
      - fake_api
      - resource
      - upload_files
    volumes:
      - ./ng/nginx.conf:/etc/nginx.conf
    ports:
      - 80:80
    networks:
      - microservices

##################################
#  set up frontend container
##################################  
  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - 4200:4200
    expose:
      - 4200
    depends_on:
      - ng
      - ai
      - auth
      - fake_api
      - resource
      - upload_files
    networks:
      - microservices

networks:
    microservices:
      driver: bridge